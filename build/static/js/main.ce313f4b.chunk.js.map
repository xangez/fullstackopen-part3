{"version":3,"sources":["components/personsDisplay.js","components/personForm.js","components/filter.js","services/persons.js","components/notification.js","app.js","index.js"],"names":["Person","person","handleDelete","className","name","number","onClick","Persons","list","map","index","key","id","PersonForm","handleNameChange","handleNumberChange","addPerson","newName","newNumber","onSubmit","value","onChange","type","Filter","handleFilterChange","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","message","App","useState","persons","setPersons","setName","setNumber","filterValue","setFilteredValue","setMessage","useEffect","personService","initalPeople","clearInput","showMessage","setTimeout","updateNumber","find","changedPerson","returnedPerson","catch","error","filter","e","target","preventDefault","window","confirm","checkPerson","concat","item","toLowerCase","startsWith","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce313f4b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Person = ({person, handleDelete}) => {\n  return (\n    <li className=\"personNumber\">\n      {person.name} {person.number}\n      <button onClick={handleDelete}>delete</button>\n    </li>\n  );\n};\n\nconst Persons = ({list, handleDelete}) => {\n  return (\n    <ul>\n      {list.map((person, index) => (\n        <Person\n          key={index}\n          person={person}\n          handleDelete={() => handleDelete(person.id, person.name)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst PersonForm = ({\n  handleNameChange,\n  handleNumberChange,\n  addPerson,\n  newName,\n  newNumber,\n}) => {\n  return (\n    <div>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Filter = ({handleFilterChange}) => {\n  return (\n    <div>\n      Filter shown with\n      <input onChange={handleFilterChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst createPerson = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default {getAll, createPerson, deletePerson, update};\n","import React from \"react\";\nimport \"../index.css\";\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"notif\">{message}</div>;\n};\n\nexport default Notification;\n","import React, {useState, useEffect} from \"react\";\nimport Persons from \"./components/personsDisplay\";\nimport PersonForm from \"./components/personForm\";\nimport Filter from \"./components/filter\";\nimport personService from \"./services/persons\";\nimport Notification from \"./components/notification\";\nimport \"./index.css\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setName] = useState(\"\");\n  const [newNumber, setNumber] = useState(\"\");\n  const [filterValue, setFilteredValue] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then((initalPeople) => {\n      setPersons(initalPeople);\n    });\n  }, []);\n\n  const clearInput = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const showMessage = (message) => {\n    setMessage(message);\n    setTimeout(() => setMessage(null), 5000);\n  };\n\n  const updateNumber = () => {\n    const person = persons.find((person) => person.name === newName);\n    const changedPerson = {...person, number: newNumber};\n\n    personService\n      .update(person.id, changedPerson)\n      .then((returnedPerson) => {\n        setPersons(\n          persons.map((person) =>\n            person.name !== newName ? person : returnedPerson\n          )\n        );\n        showMessage(`${returnedPerson.name}'s number updated`);\n      })\n      .catch((error) => {\n        showMessage(`${person.name} already removed from server`);\n        setPersons(persons.filter((person) => person.name !== newName));\n      });\n  };\n\n  const checkPerson = () => {\n    for (let person of persons) {\n      if (person.name === newName) {\n        let response = window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        );\n        if (response) {\n          updateNumber();\n        }\n        return true;\n      }\n    }\n  };\n\n  const filterPersons = () => {\n    if (filterValue === \"\") {\n      return persons;\n    }\n    return persons.filter(\n      (item) =>\n        item.name.toLowerCase().startsWith(filterValue.toLowerCase()) === true\n    );\n  };\n\n  const addPerson = (e) => {\n    e.preventDefault();\n    if (checkPerson()) {\n      clearInput();\n      return;\n    }\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n    personService.createPerson(personObject).then((returnedPerson) => {\n      showMessage(`${returnedPerson.name} added`);\n      setPersons(persons.concat(returnedPerson));\n      clearInput();\n    });\n  };\n\n  const handleDelete = (id, name) => {\n    let result = window.confirm(`Delete ${name}?`);\n    if (result) {\n      personService.deletePerson(id);\n      setPersons(persons.filter((person) => person.id !== id));\n    } else {\n      return;\n    }\n  };\n\n  const handleFilterChange = (e) => {\n    setFilteredValue(e.target.value);\n  };\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setNumber(e.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter handleFilterChange={handleFilterChange} />\n      <h2>Add a new</h2>\n      <PersonForm\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons list={filterPersons()} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}